services:
  postgres:
    image: postgis/postgis:12-2.5-alpine
    mem_limit: 1g
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=opendatacubepassword
      - POSTGRES_USER=postgres
    volumes:
      #- ./data/pg:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - 5432:5432
    restart: always

  checkdb:
    image: schaffdev/port_check:latest
    mem_limit: 500m
    environment:
      - CHECK_HOST=postgres
      - CHECK_PORT=5432

  django:
    build: ./django
    mem_limit: 1g
    environment:
      - DB_HOSTNAME=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=opendatacubepassword
      - DB_DATABASE=postgres
      - OWS_HOSTNAME=ows
    volumes:
      - ./django:/app
      - static_volume:/app/static
      - ./data:/data
    ports:
      - "8001:8000"
    restart: always
    depends_on:
      - postgres
      - ows
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn -b '0.0.0.0:8000' --workers=3 --threads=2 -k gevent --timeout 121 --pid /app/gunicorn.pid --log-level info --worker-tmp-dir /dev/shm cuborizonte.wsgi:application"

  ows:
    build:
      context: ./ows
      dockerfile: Dockerfile
    mem_limit: 1g
    environment:
      DB_HOSTNAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: opendatacubepassword
      DB_DATABASE: postgres
      DB_PORT: 5432
      PYTHONPATH: /env/config
      DATACUBE_OWS_CFG: ows_refactored.dev_af_ows_root_cfg.ows_cfg
    ports:
      - 8000:8000
    depends_on:
      - postgres
    volumes:
      - ./data:/data
      - ./ows/products:/env/products
      - ./ows/services/ows_refactored:/env/config/ows_refactored/
      - ./ows/services/inventory:/env/config/inventory/
      - ./ows/output:/env/config/output/
      - ./ows/handle_data_functions:/handle_data_functions

volumes:
  static_volume:
